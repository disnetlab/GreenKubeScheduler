import numpy as np
import matplotlib.pyplot as plt

"""
# 预测的值
predicted_values = np.array([0.7929375, 0.8574835, 0.85968286, 0.8072718, 0.72160894, 0.5383817,
                             0.3456153, 0.1611704, 0.00000267, 0.00000266, 0.00000294, 0.00000338,
                             0.00000332, 0.00000474, 0.0000027, 0.00000307, 0.00000385, 0.00000316,
                             0.00000377, 0.00000385, 0.08707512, 0.27600253, 0.45868513, 0.641328])
"""

predicted_values = np.array([0.5314243,  0.5934349,  0.6010978,  0.57162374, 0.49174947, 0.3542404,
  0.18958606, 0.01651222, 0.00011731, 0.00012827, 0.00013023, 0.00014461,
  0.000171,   0.00014471, 0.00012896, 0.00015699, 0.00019059, 0.000201,
  0.00012124, 0.00013958, 0.00191635, 0.14472508, 0.3009559,  0.4485783 ])



# 实际的值
actual_values = np.array([0.2509025270758123,0.5072202166064982,0.4250902527075812,0.4792418772563176,0.3907942238267148,0.3149819494584837,0.1398916967509025,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.141696750902527,0.3212996389891697,0.4945848375451263])

# 创建时间轴（1到24小时）
hours = np.arange(0, 24)

# 绘制折线图
plt.figure(figsize=(10, 6), dpi=200)
plt.plot(hours, predicted_values, label='predict Value', marker='o')
plt.plot(hours, actual_values, label='actual Value', marker='x')
plt.title('predict 6.20')
plt.xlabel('hour')
plt.ylabel('radiation')

y_min = 0  # 可以调整为实际需要的最小值
y_max = 1  # 可以调整为实际需要的最大值
plt.yticks(np.arange(y_min, y_max + 0.1, 0.1))

plt.legend()
plt.grid(True)
plt.savefig('/Users/suenyvan/Desktop/DataSet2/solarPrediction/6.20.png')
